/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as SsoCallbackImport } from './routes/sso.callback'
import { Route as DemoTanstackQueryImport } from './routes/demo/tanstack-query'
import { Route as DemoConvexImport } from './routes/demo/convex'
import { Route as AppSessionsImport } from './routes/app/sessions'
import { Route as AppOverviewImport } from './routes/app/overview'
import { Route as DemoStartServerFuncsImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestImport } from './routes/demo/start.api-request'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const SsoCallbackRoute = SsoCallbackImport.update({
  id: '/sso/callback',
  path: '/sso/callback',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoConvexRoute = DemoConvexImport.update({
  id: '/demo/convex',
  path: '/demo/convex',
  getParentRoute: () => rootRoute,
} as any)

const AppSessionsRoute = AppSessionsImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppOverviewRoute = AppOverviewImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => AppRouteRoute,
} as any)

const DemoStartServerFuncsRoute = DemoStartServerFuncsImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRoute,
} as any)

const DemoStartApiRequestRoute = DemoStartApiRequestImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/overview': {
      id: '/app/overview'
      path: '/overview'
      fullPath: '/app/overview'
      preLoaderRoute: typeof AppOverviewImport
      parentRoute: typeof AppRouteImport
    }
    '/app/sessions': {
      id: '/app/sessions'
      path: '/sessions'
      fullPath: '/app/sessions'
      preLoaderRoute: typeof AppSessionsImport
      parentRoute: typeof AppRouteImport
    }
    '/demo/convex': {
      id: '/demo/convex'
      path: '/demo/convex'
      fullPath: '/demo/convex'
      preLoaderRoute: typeof DemoConvexImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/sso/callback': {
      id: '/sso/callback'
      path: '/sso/callback'
      fullPath: '/sso/callback'
      preLoaderRoute: typeof SsoCallbackImport
      parentRoute: typeof rootRoute
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestImport
      parentRoute: typeof rootRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppOverviewRoute: typeof AppOverviewRoute
  AppSessionsRoute: typeof AppSessionsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppOverviewRoute: AppOverviewRoute,
  AppSessionsRoute: AppSessionsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/overview': typeof AppOverviewRoute
  '/app/sessions': typeof AppSessionsRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/sso/callback': typeof SsoCallbackRoute
  '/app/': typeof AppIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/overview': typeof AppOverviewRoute
  '/app/sessions': typeof AppSessionsRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/sso/callback': typeof SsoCallbackRoute
  '/app': typeof AppIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/overview': typeof AppOverviewRoute
  '/app/sessions': typeof AppSessionsRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/sso/callback': typeof SsoCallbackRoute
  '/app/': typeof AppIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/overview'
    | '/app/sessions'
    | '/demo/convex'
    | '/demo/tanstack-query'
    | '/sso/callback'
    | '/app/'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/overview'
    | '/app/sessions'
    | '/demo/convex'
    | '/demo/tanstack-query'
    | '/sso/callback'
    | '/app'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/overview'
    | '/app/sessions'
    | '/demo/convex'
    | '/demo/tanstack-query'
    | '/sso/callback'
    | '/app/'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  DemoConvexRoute: typeof DemoConvexRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  SsoCallbackRoute: typeof SsoCallbackRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  DemoConvexRoute: DemoConvexRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  SsoCallbackRoute: SsoCallbackRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/demo/convex",
        "/demo/tanstack-query",
        "/sso/callback",
        "/demo/start/api-request",
        "/demo/start/server-funcs"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/overview",
        "/app/sessions",
        "/app/"
      ]
    },
    "/app/overview": {
      "filePath": "app/overview.tsx",
      "parent": "/app"
    },
    "/app/sessions": {
      "filePath": "app/sessions.tsx",
      "parent": "/app"
    },
    "/demo/convex": {
      "filePath": "demo/convex.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo/tanstack-query.tsx"
    },
    "/sso/callback": {
      "filePath": "sso.callback.tsx"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/demo/start/api-request": {
      "filePath": "demo/start.api-request.tsx"
    },
    "/demo/start/server-funcs": {
      "filePath": "demo/start.server-funcs.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
