/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as SsoCallbackImport } from './routes/sso.callback'
import { Route as AppCampaignIdRouteImport } from './routes/app/$campaignId/route'
import { Route as AppCampaignIdIndexImport } from './routes/app/$campaignId/index'
import { Route as AppCampaignIdChatImport } from './routes/app/$campaignId/chat'
import { Route as AppCampaignIdSessionSessionIdRouteImport } from './routes/app/$campaignId/session/$sessionId/route'
import { Route as AppCampaignIdSessionSessionIdIndexImport } from './routes/app/$campaignId/session/$sessionId/index'
import { Route as AppCampaignIdSessionRecordingRecordingIdImport } from './routes/app/$campaignId/session/recording.$recordingId'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const SsoCallbackRoute = SsoCallbackImport.update({
  id: '/sso/callback',
  path: '/sso/callback',
  getParentRoute: () => rootRoute,
} as any)

const AppCampaignIdRouteRoute = AppCampaignIdRouteImport.update({
  id: '/$campaignId',
  path: '/$campaignId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCampaignIdIndexRoute = AppCampaignIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppCampaignIdRouteRoute,
} as any)

const AppCampaignIdChatRoute = AppCampaignIdChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AppCampaignIdRouteRoute,
} as any)

const AppCampaignIdSessionSessionIdRouteRoute =
  AppCampaignIdSessionSessionIdRouteImport.update({
    id: '/session/$sessionId',
    path: '/session/$sessionId',
    getParentRoute: () => AppCampaignIdRouteRoute,
  } as any)

const AppCampaignIdSessionSessionIdIndexRoute =
  AppCampaignIdSessionSessionIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppCampaignIdSessionSessionIdRouteRoute,
  } as any)

const AppCampaignIdSessionRecordingRecordingIdRoute =
  AppCampaignIdSessionRecordingRecordingIdImport.update({
    id: '/session/recording/$recordingId',
    path: '/session/recording/$recordingId',
    getParentRoute: () => AppCampaignIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/$campaignId': {
      id: '/app/$campaignId'
      path: '/$campaignId'
      fullPath: '/app/$campaignId'
      preLoaderRoute: typeof AppCampaignIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/sso/callback': {
      id: '/sso/callback'
      path: '/sso/callback'
      fullPath: '/sso/callback'
      preLoaderRoute: typeof SsoCallbackImport
      parentRoute: typeof rootRoute
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/$campaignId/chat': {
      id: '/app/$campaignId/chat'
      path: '/chat'
      fullPath: '/app/$campaignId/chat'
      preLoaderRoute: typeof AppCampaignIdChatImport
      parentRoute: typeof AppCampaignIdRouteImport
    }
    '/app/$campaignId/': {
      id: '/app/$campaignId/'
      path: '/'
      fullPath: '/app/$campaignId/'
      preLoaderRoute: typeof AppCampaignIdIndexImport
      parentRoute: typeof AppCampaignIdRouteImport
    }
    '/app/$campaignId/session/$sessionId': {
      id: '/app/$campaignId/session/$sessionId'
      path: '/session/$sessionId'
      fullPath: '/app/$campaignId/session/$sessionId'
      preLoaderRoute: typeof AppCampaignIdSessionSessionIdRouteImport
      parentRoute: typeof AppCampaignIdRouteImport
    }
    '/app/$campaignId/session/recording/$recordingId': {
      id: '/app/$campaignId/session/recording/$recordingId'
      path: '/session/recording/$recordingId'
      fullPath: '/app/$campaignId/session/recording/$recordingId'
      preLoaderRoute: typeof AppCampaignIdSessionRecordingRecordingIdImport
      parentRoute: typeof AppCampaignIdRouteImport
    }
    '/app/$campaignId/session/$sessionId/': {
      id: '/app/$campaignId/session/$sessionId/'
      path: '/'
      fullPath: '/app/$campaignId/session/$sessionId/'
      preLoaderRoute: typeof AppCampaignIdSessionSessionIdIndexImport
      parentRoute: typeof AppCampaignIdSessionSessionIdRouteImport
    }
  }
}

// Create and export the route tree

interface AppCampaignIdSessionSessionIdRouteRouteChildren {
  AppCampaignIdSessionSessionIdIndexRoute: typeof AppCampaignIdSessionSessionIdIndexRoute
}

const AppCampaignIdSessionSessionIdRouteRouteChildren: AppCampaignIdSessionSessionIdRouteRouteChildren =
  {
    AppCampaignIdSessionSessionIdIndexRoute:
      AppCampaignIdSessionSessionIdIndexRoute,
  }

const AppCampaignIdSessionSessionIdRouteRouteWithChildren =
  AppCampaignIdSessionSessionIdRouteRoute._addFileChildren(
    AppCampaignIdSessionSessionIdRouteRouteChildren,
  )

interface AppCampaignIdRouteRouteChildren {
  AppCampaignIdChatRoute: typeof AppCampaignIdChatRoute
  AppCampaignIdIndexRoute: typeof AppCampaignIdIndexRoute
  AppCampaignIdSessionSessionIdRouteRoute: typeof AppCampaignIdSessionSessionIdRouteRouteWithChildren
  AppCampaignIdSessionRecordingRecordingIdRoute: typeof AppCampaignIdSessionRecordingRecordingIdRoute
}

const AppCampaignIdRouteRouteChildren: AppCampaignIdRouteRouteChildren = {
  AppCampaignIdChatRoute: AppCampaignIdChatRoute,
  AppCampaignIdIndexRoute: AppCampaignIdIndexRoute,
  AppCampaignIdSessionSessionIdRouteRoute:
    AppCampaignIdSessionSessionIdRouteRouteWithChildren,
  AppCampaignIdSessionRecordingRecordingIdRoute:
    AppCampaignIdSessionRecordingRecordingIdRoute,
}

const AppCampaignIdRouteRouteWithChildren =
  AppCampaignIdRouteRoute._addFileChildren(AppCampaignIdRouteRouteChildren)

interface AppRouteRouteChildren {
  AppCampaignIdRouteRoute: typeof AppCampaignIdRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCampaignIdRouteRoute: AppCampaignIdRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/$campaignId': typeof AppCampaignIdRouteRouteWithChildren
  '/sso/callback': typeof SsoCallbackRoute
  '/app/': typeof AppIndexRoute
  '/app/$campaignId/chat': typeof AppCampaignIdChatRoute
  '/app/$campaignId/': typeof AppCampaignIdIndexRoute
  '/app/$campaignId/session/$sessionId': typeof AppCampaignIdSessionSessionIdRouteRouteWithChildren
  '/app/$campaignId/session/recording/$recordingId': typeof AppCampaignIdSessionRecordingRecordingIdRoute
  '/app/$campaignId/session/$sessionId/': typeof AppCampaignIdSessionSessionIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sso/callback': typeof SsoCallbackRoute
  '/app': typeof AppIndexRoute
  '/app/$campaignId/chat': typeof AppCampaignIdChatRoute
  '/app/$campaignId': typeof AppCampaignIdIndexRoute
  '/app/$campaignId/session/recording/$recordingId': typeof AppCampaignIdSessionRecordingRecordingIdRoute
  '/app/$campaignId/session/$sessionId': typeof AppCampaignIdSessionSessionIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/$campaignId': typeof AppCampaignIdRouteRouteWithChildren
  '/sso/callback': typeof SsoCallbackRoute
  '/app/': typeof AppIndexRoute
  '/app/$campaignId/chat': typeof AppCampaignIdChatRoute
  '/app/$campaignId/': typeof AppCampaignIdIndexRoute
  '/app/$campaignId/session/$sessionId': typeof AppCampaignIdSessionSessionIdRouteRouteWithChildren
  '/app/$campaignId/session/recording/$recordingId': typeof AppCampaignIdSessionRecordingRecordingIdRoute
  '/app/$campaignId/session/$sessionId/': typeof AppCampaignIdSessionSessionIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/$campaignId'
    | '/sso/callback'
    | '/app/'
    | '/app/$campaignId/chat'
    | '/app/$campaignId/'
    | '/app/$campaignId/session/$sessionId'
    | '/app/$campaignId/session/recording/$recordingId'
    | '/app/$campaignId/session/$sessionId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sso/callback'
    | '/app'
    | '/app/$campaignId/chat'
    | '/app/$campaignId'
    | '/app/$campaignId/session/recording/$recordingId'
    | '/app/$campaignId/session/$sessionId'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/$campaignId'
    | '/sso/callback'
    | '/app/'
    | '/app/$campaignId/chat'
    | '/app/$campaignId/'
    | '/app/$campaignId/session/$sessionId'
    | '/app/$campaignId/session/recording/$recordingId'
    | '/app/$campaignId/session/$sessionId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  SsoCallbackRoute: typeof SsoCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  SsoCallbackRoute: SsoCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/sso/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/$campaignId",
        "/app/"
      ]
    },
    "/app/$campaignId": {
      "filePath": "app/$campaignId/route.tsx",
      "parent": "/app",
      "children": [
        "/app/$campaignId/chat",
        "/app/$campaignId/",
        "/app/$campaignId/session/$sessionId",
        "/app/$campaignId/session/recording/$recordingId"
      ]
    },
    "/sso/callback": {
      "filePath": "sso.callback.tsx"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/$campaignId/chat": {
      "filePath": "app/$campaignId/chat.tsx",
      "parent": "/app/$campaignId"
    },
    "/app/$campaignId/": {
      "filePath": "app/$campaignId/index.tsx",
      "parent": "/app/$campaignId"
    },
    "/app/$campaignId/session/$sessionId": {
      "filePath": "app/$campaignId/session/$sessionId/route.tsx",
      "parent": "/app/$campaignId",
      "children": [
        "/app/$campaignId/session/$sessionId/"
      ]
    },
    "/app/$campaignId/session/recording/$recordingId": {
      "filePath": "app/$campaignId/session/recording.$recordingId.tsx",
      "parent": "/app/$campaignId"
    },
    "/app/$campaignId/session/$sessionId/": {
      "filePath": "app/$campaignId/session/$sessionId/index.tsx",
      "parent": "/app/$campaignId/session/$sessionId"
    }
  }
}
ROUTE_MANIFEST_END */
